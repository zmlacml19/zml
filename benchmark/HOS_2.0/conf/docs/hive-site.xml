<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
  <value>jdbc:mysql://bdpe74:3306/metastore?createDatabaseIfNotExist=true</value>
-->

<configuration>
<property>
  <name>javax.jdo.option.ConnectionURL</name>
  <value>jdbc:mysql://localhost:3306/metastore?createDatabaseIfNotExist=true</value>
  <description>the URL of the MySQL database</description>
 </property>
 <property>
   <name>javax.jdo.option.ConnectionDriverName</name>
   <value>com.mysql.jdbc.Driver</value>
 </property>
   <property>
           <name>javax.jdo.option.ConnectionUserName</name>
           <value>root</value>
           <description>user name for connecting to mysql server </description>
    </property>
    <property>
            <name>javax.jdo.option.ConnectionPassword</name>
             <value>123456</value>
            <description>password for connecting to mysql server </description>
     </property>
     <property>
       <name>datanucleus.autoCreateSchema</name>
         <value>false</value>
         </property>
     <property>
       <name>datanucleus.autoCreateTables</name>
         <value>true</value>
         </property>
<property>
  <name>datanucleus.autoStartMechanism</name> 
  <value>SchemaTable</value>
</property>
<property>
  <name>datanucleus.fixedDatastore</name>
    <value>true</value>
    </property> 
   <property>
    <name>hive.metastore.uris</name>
    <value>thrift://10.239.47.139:9083</value>
    <description>IP address (or fully-qualified domain name) and port of the metastore host</description>
   </property>
<property>
    <name>hive.execution.engine</name>
    <value>spark</value>
  </property>
  <property>
    <name>spark.eventLog.enabled</name>
    <value>true</value>
  </property>
  <property>
    <name>spark.eventLog.dir</name>
    <value>hdfs://10.239.47.139:8020/spark-history-server/hos20</value>
  </property>
  <property>
  <property>
    <name>spark.executor.memory</name>
    <value>1g</value>
  </property>
    <name>spark.executor.cores</name>
    <value>3</value>
  </property>
  <property>
    <name>spark.executor.instances</name>
    <value>3</value>
  </property>
  <property>
    <name>spark.serializer</name>
    <value>org.apache.spark.serializer.KryoSerializer</value>
  </property>
<property>
<name>hive.metastore.schema.verification</name>
<value>false</value>
</property>
   <!-- Authorization configuration -->
<!--<property>
       <name>hive.security.authorization.enabled</name>
       <value>true</value>
    <description>enable or disable the hive client authorization</description>
    </property>
   <property>
          <name>hive.security.authorization.createtable.owner.grants</name>
              <value>ALL</value>
                  <description>the privileges automatically granted to the owner whenever a table gets created. An example like "select , drop" will grant select and drop privilege to the owner of the table</description>
     </property>
 <property>
    	<name>hive.server2.enable.doAs</name>
    	<value>false</value>
    </property> 
    <property>
    	<name>hive.users.in.admin.role</name>
    	<value>root,aa</value>
    </property> 
   <property>
      <name>hive.security.authenticator.manager</name>
      <value>org.apache.hadoop.hive.ql.security.SessionStateUserAuthenticator</value>
              <description>
                    hive client authenticator manager class name. The user defined authenticator should implement
                          interface org.apache.hadoop.hive.ql.security.HiveAuthenticationProvider.
              </description>
   </property>
     <property> 
         <name>hive.security.authorization.manager</name> 
         <value>org.apache.hadoop.hive.ql.security.authorization.plugin.sqlstd.SQLStdHiveAuthorizerFactory</value> 
         <description> 
           The Hive client authorization manager class name. The user defined authorization class should implement 
           interface org.apache.hadoop.hive.ql.security.authorization.HiveAuthorizationProvider. 
         </description> 
       </property>
     <property>
     	<name>hive.security.metastore.authorization.manager</name>
     	<value>org.apache.hadoop.hive.ql.security.authorization.MetaStoreAuthzAPIAuthorizerEmbedOnly</value>
     </property>
     <property>
          <name>hive.conf.restricted.list</name>
              <value>hive.security.authorization.enabled,hive.security.authorization.manager,hive.security.authenticator.manager,hive.users.in.admin.role</value>
                </property>
   <property>  
 <name>hive.server2.thrift.port</name>  
   <value>10000</value>  
   <description>Port number of HiveServer2 Thrift interface. Can be overridden by setting $HIVE_SERVER2_THRIFT_PORT</description>  
   </property>
<property>
<name>hive.server2.thrift.bind.host</name>  
<value>localhost</value>  
<description>Bind host on which to run the HiveServer2 Thrift interface.Can be overridden by setting$HIVE_SERVER2_THRIFT_BIND_HOST</description>  
</property>
<property>
    <name>hive.server2.logging.operation.enabled</name>
        <value>true</value>
            <description>When true, HS2 will save operation logs</description>
      </property>
<property>
    <name>hive.server2.logging.operation.log.location</name>
    <value>/tmp/hive/operation_logs</value>
    <description>Top level directory where operation logs are stored if logging functionality is enabled</description>
</property>-->
 </configuration>
